@model IEnumerable<VipFitness_ADMIN.Models.UserTrainings>

@{
    ViewData["Title"] = "Kullanıcı Antreman Atama Sayfası";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="~/Content/UserTrainings/usertrainings.css" rel="stylesheet" />
    <script src="~/Content/js/jquery-3.7.1.min.js"></script>
    <script src="~/Content/js/jquery-ui.min.js"></script>
    <script src="~/Content/js/select2.min.js"></script>
    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="h3">
            <text> <b>@ViewBag.SelectedUser.username</b> Kullanıcısının Antreman Listesi </text>
        </div>
        <div class="modal" id="setInfoModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modaltitle_s1">Set Bilgisi Girin</h5>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                <label for="setInfo">Set Bilgisi:</label>
                                <input type="text"  class="form-control" id="setInfo">
                            </div>
                            <button type="button" class="btn btn-primary" id="saveSetInfo">Kaydet</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <div>
            <div class="label">1.Antreman Grubu</div>
            <select class="select2" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>
        <div>
            <div class="label">2.Antreman Grubu</div>
            <select class="select3" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>
        <div>
            <div class="label">3.Antreman Grubu</div>
            <select class="select4" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>
        <div>
            <div class="label">4.Antreman Grubu</div>
            <select class="select5" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>
        <div>
            <div class="label">5.Antreman Grubu</div>
            <select class="select6" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>

        <div>
            <div class="label">6.Antreman Grubu</div>
            <select class="select7" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>

        <div>
            <div class="label"> 7.Antreman Grubu</div>
            <select class="select8" multiple data-mdb-filter="true">
                @foreach (var item in ViewBag.ActiveTrainings)
                {
                    <option value="@item.id">@item.TrainingName</option>
                }
            </select>
        </div>

        <button id="save-button">Kaydet</button>
    </div>

    <script>
        var trainingData = {};  // Seçilecek antremanları saklayacağımız objeyi tanımladık.

        $(document).ready(function () {
            try {
                $('.select2').select2();
                $('.select3').select2();
                $('.select4').select2();
                $('.select5').select2();
                $('.select6').select2();
                $('.select7').select2();
                $('.select8').select2();
            }
            catch (error) {
                console.error("select değerleri yüklenirken hata oluştu: ", error);
            }

        });

        $("#save-button").click(function () {
            var selectedItems = $('.select').val(); // Seçilen öğeleri al
            console.log(selectedItems); // Seçilen öğeleri konsola yazdır (isteğe bağlı)
            sendDataToServer(trainingData);

        });

        $('.select2').select2().on('select2:unselect', function (e) {
            var unselectedOption = $(e.params.data.element);
            var unselectedTrainingId = unselectedOption.val();
            delete trainingData[unselectedTrainingId]; // Antrenmanı trainingData objesinden kaldır
            console.log(trainingData); // Değişiklikleri konsola yazdır
        });

        $('.select2').on('select2:select', function (e) {
            var selectedOption = $(e.params.data.element);
            var trainingId = selectedOption.val();
            var trainingName = selectedOption.text();
            var selectedValue = parseInt($('.select2').val());

            $('#modaltitle_s1').text(trainingName + ' Antremanı Set Bilgisi');
            $('#setInfoModal').modal('show');

            $('#saveSetInfo').on('click', function () {
                var setInfo = $('#setInfo').val();

                // Eklenecek veriyi oluştur
                var newData = {
                    TrainingId: trainingId,
                    TrainingName: trainingName,
                    TrainingType: selectedValue,
                    SetInfo: setInfo,
                    SortNo: Object.keys(trainingData).length + 1,
                    username: @Json.Serialize(ViewBag.SelectedUser.username),
                    isActive: true,
                    userID: parseInt(@Json.Serialize(ViewBag.SelectedUser.id))
                };

                // Eğer aynı kayıt yoksa veriyi ekle
                if (!(trainingId in trainingData) || JSON.stringify(trainingData[trainingId].TrainingType) !== JSON.stringify(newData.TrainingType)) {
                    trainingData[trainingId] = newData;
                    console.log(trainingData);
                }

                // Modalı kapat
                $('#setInfoModal').modal('hide');
            });
        });


        function sendDataToServer() {
            var dataArray = Object.values(trainingData); // Obje içindeki verileri diziye dönüştürdük.
            $.ajax({
                url: '/api/UserTrainings/GetDatas',
                type: 'POST',
                data: JSON.stringify(dataArray), // Veriyi nesne içinde gönder
                contentType: 'application/json',
                traditional: true, // jQuery tarafından veriyi doğru şekilde encode etmek için traditional ayarı yaptık.
                dataType: 'json', // Sunucudan dönen verinin tipi json olmalı.
                success: function (response) {
                    console.log(response); // Sunucudan dönen yanıtı burada işleyebilirsiniz
                },
                error: function (error,xhr, status) {
                    console.error(error);
                    console.error(xhr);
                }
            });
        }

    </script>
</body>
</html>
